spring.application.name=product-service
server.port=8000

spring.datasource.url=jdbc:postgresql://localhost/bd_product
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.flyway.locations=classpath:/db_migration

spring.cloud.openfeign.circuitbreaker.enabled=true

#Habilita o indicador de saude para esta instancia de circuit breaker
Bresilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.register-health-indicator=true 
#Numero de chamadas na janela deslizante para calcular a taxa de falhas
resilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.slidingWindowSize=18 
#Numero minimo de chamadas antes de calcular a taxa de falhas
resilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.minimumNumberOfCalls=5
# Percentual maximo de falhas permitido antes de abrir o circuito
resilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.failureRateThreshold=50 
#Tempo que o circuito permanece aberto antes de ir para meio-aberto
resilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.waitDurationInOpenState=10s
#Numero de chamadas permitidas no estado meio-aberto para testar
resilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.permittedNumberOfCallsInHalfOpenState=3 
#Ativa a transicao automatica de aberto para meio-aberto sem esperar chamada
resilience4j.circuitbreaker.instances.CurrencyClientgetCurrencydoubleSrtingString.automaticTransitionFromOpenToHalfOpenEnabled=true

management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*

spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize500,expireAfterWrite=10m